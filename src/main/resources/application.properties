# configure your datasource
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = ordersuser
quarkus.datasource.password = orderspassword
quarkus.datasource.jdbc.url = jdbc:postgresql://orders.amq-demo-prj-1.svc.cluster.local:5432/ordersdb
%test.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/ordersdb

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create

quarkus.kubernetes-client.trust-certs=true
quarkus.openshift.route.expose=true
# Configuring the outgoing channel (writing to Kafka)
mp.messaging.incoming.orders-out.connector=smallrye-kafka
mp.messaging.incoming.orders-out.topic=orders-out
mp.messaging.incoming.orders-out.key.deserializer=org.apache.kafka.common.serialization.UUIDDeserializer
mp.messaging.incoming.orders-out.value.deserializer=com.redhat.demo.mcombi.OrderDeserializer

kafka.bootstrap.servers=my-cluster-kafka-bootstrap.amq-demo-prj-1.svc.cluster.local:9092
%test.mp.messaging.incoming.orders-out.connector=smallrye-in-memory
%test.mp.messaging.incoming.orders-out.topic=orders